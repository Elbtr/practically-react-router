{"ast":null,"code":"var _jsxFileName = \"/home/hasael/Desktop/belajar-react js/practically react-router/frontend/src/App.js\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport EventDetailPage from \"./page/EventDetailPage\";\nimport EventsPage from \"./page/EventsPage\";\nimport HomePage from \"./page/HomePage\";\nimport RootLayout from \"./root/RootLayout\";\nimport NewEventPage from \"./page/NewEventPage\";\nimport EditEventPage from \"./page/EditEventPage\";\nimport RootEvents from \"./root/RootEvents\";\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this),\n    children: [{\n      index: true,\n      path: \"\",\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 43\n      }, this)\n    }, {\n      index: true,\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 49\n      }, this)\n    }, {\n      path: \"events/:detailId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 46\n      }, this)\n    }, {\n      path: \"events/new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 40\n      }, this)\n    }, {\n      path: \"events/:editId\",\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 44\n      }, this)\n    }]\n  }, {\n    path: \"/events\",\n    element: /*#__PURE__*/_jsxDEV(RootEvents, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this),\n    children: [{\n      path: \"events/:detailId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 46\n      }, this)\n    }, {\n      path: \"events/new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 40\n      }, this)\n    }, {\n      path: \"events/:editId\",\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 44\n      }, this)\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","EventDetailPage","EventsPage","HomePage","RootLayout","NewEventPage","EditEventPage","RootEvents","App","router","path","element","children","index"],"sources":["/home/hasael/Desktop/belajar-react js/practically react-router/frontend/src/App.js"],"sourcesContent":["import { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport EventDetailPage from \"./page/EventDetailPage\";\nimport EventsPage from \"./page/EventsPage\";\nimport HomePage from \"./page/HomePage\";\nimport RootLayout from \"./root/RootLayout\";\nimport NewEventPage from \"./page/NewEventPage\";\nimport EditEventPage from \"./page/EditEventPage\";\nimport RootEvents from \"./root/RootEvents\";\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <RootLayout />,\n      children: [\n        { index: true, path: \"\", element: <HomePage /> },\n        { index: true, path: \"events\", element: <EventsPage /> },\n        { path: \"events/:detailId\", element: <EventDetailPage /> },\n        { path: \"events/new\", element: <NewEventPage /> },\n        { path: \"events/:editId\", element: <EditEventPage /> },\n      ],\n    },\n    {\n      path: \"/events\",\n      element: <RootEvents />,\n      children: [\n        { path: \"events/:detailId\", element: <EventDetailPage /> },\n        { path: \"events/new\", element: <NewEventPage /> },\n        { path: \"events/:editId\", element: <EditEventPage /> },\n      ],\n    },\n  ]);\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,eAAe,MAAM,wBAAwB;AACpD,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,UAAU,MAAM,mBAAmB;;AAE1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,SAASC,GAAG,GAAG;EACb,MAAMC,MAAM,GAAGV,mBAAmB,CAAC,CACjC;IACEW,IAAI,EAAE,GAAG;IACTC,OAAO,eAAE,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG;IACvBC,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,IAAI;MAAEH,IAAI,EAAE,EAAE;MAAEC,OAAO,eAAE,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC,EAChD;MAAEE,KAAK,EAAE,IAAI;MAAEH,IAAI,EAAE,QAAQ;MAAEC,OAAO,eAAE,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC,EACxD;MAAED,IAAI,EAAE,kBAAkB;MAAEC,OAAO,eAAE,QAAC,eAAe;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC,EAC1D;MAAED,IAAI,EAAE,YAAY;MAAEC,OAAO,eAAE,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC,EACjD;MAAED,IAAI,EAAE,gBAAgB;MAAEC,OAAO,eAAE,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC;EAE1D,CAAC,EACD;IACED,IAAI,EAAE,SAAS;IACfC,OAAO,eAAE,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG;IACvBC,QAAQ,EAAE,CACR;MAAEF,IAAI,EAAE,kBAAkB;MAAEC,OAAO,eAAE,QAAC,eAAe;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC,EAC1D;MAAED,IAAI,EAAE,YAAY;MAAEC,OAAO,eAAE,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC,EACjD;MAAED,IAAI,EAAE,gBAAgB;MAAEC,OAAO,eAAE,QAAC,aAAa;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC;EAE1D,CAAC,CACF,CAAC;EACF,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEF;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3C;AAAC,KAxBQD,GAAG;AA0BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}