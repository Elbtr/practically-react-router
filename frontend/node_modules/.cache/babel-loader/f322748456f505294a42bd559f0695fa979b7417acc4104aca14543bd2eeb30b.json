{"ast":null,"code":"var _jsxFileName = \"/home/hasael/Desktop/belajar-react js/practically react-router/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// done\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// done\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// done\n// 4. Add properly working links to the MainNavigation\n// done\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// done\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// done\n// 7. Output the ID of the selected event on the EventDetailPage\n// done\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport EditEvent from \"./pages/EditEvent\";\nimport ErrorPage from \"./pages/Error\";\nimport EventDetail from \"./pages/EventDetail\";\nimport EventRootLayout from \"./pages/EventRootLayout\";\nimport Events, { loader as eventsLoader } from \"./pages/Events\";\nimport Home from \"./pages/Home\";\nimport NewEvent from \"./pages/NewEvent\";\nimport RootLayout from \"./pages/RootLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    path: \"\",\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 41\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 22\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: \":eventId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 40\n      }, this)\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: \":eventId/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 45\n      }, this)\n    }]\n  }]\n}]);\n// events di render ketika kita mengklik request events nya sebagai contoh di dalam backend events.js di router.get(\"/ \") saya menambahakan setTimeOut\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","EditEvent","ErrorPage","EventDetail","EventRootLayout","Events","loader","eventsLoader","Home","NewEvent","RootLayout","router","path","element","errorElement","children","index","App"],"sources":["/home/hasael/Desktop/belajar-react js/practically react-router/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// done\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// done\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// done\n// 4. Add properly working links to the MainNavigation\n// done\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// done\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// done\n// 7. Output the ID of the selected event on the EventDetailPage\n// done\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport EditEvent from \"./pages/EditEvent\";\nimport ErrorPage from \"./pages/Error\";\nimport EventDetail from \"./pages/EventDetail\";\nimport EventRootLayout from \"./pages/EventRootLayout\";\nimport Events, { loader as eventsLoader } from \"./pages/Events\";\nimport Home from \"./pages/Home\";\nimport NewEvent from \"./pages/NewEvent\";\nimport RootLayout from \"./pages/RootLayout\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      { index: true, path: \"\", element: <Home /> },\n      {\n        path: \"events\",\n        element: <EventRootLayout />,\n        children: [\n          {\n            index: true,\n            element: <Events />,\n            loader: eventsLoader,\n          },\n          { path: \":eventId\", element: <EventDetail /> },\n          { path: \"new\", element: <NewEvent /> },\n          { path: \":eventId/edit\", element: <EditEvent /> },\n        ],\n      },\n    ],\n  },\n]);\n// events di render ketika kita mengklik request events nya sebagai contoh di dalam backend events.js di router.get(\"/ \") saya menambahakan setTimeOut\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,MAAM,IAAIC,MAAM,IAAIC,YAAY,QAAQ,gBAAgB;AAC/D,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAAC;AAE5C,MAAMC,MAAM,GAAGX,mBAAmB,CAAC,CACjC;EACEY,IAAI,EAAE,GAAG;EACTC,OAAO,eAAE,QAAC,UAAU;IAAA;IAAA;IAAA;EAAA,QAAG;EACvBC,YAAY,eAAE,QAAC,SAAS;IAAA;IAAA;IAAA;EAAA,QAAG;EAC3BC,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEJ,IAAI,EAAE,EAAE;IAAEC,OAAO,eAAE,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EAC5C;IACED,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAE,QAAC,eAAe;MAAA;MAAA;MAAA;IAAA,QAAG;IAC5BE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MACXH,OAAO,eAAE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;MACnBP,MAAM,EAAEC;IACV,CAAC,EACD;MAAEK,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAE,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC,EAC9C;MAAED,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAE,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC,EACtC;MAAED,IAAI,EAAE,eAAe;MAAEC,OAAO,eAAE,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA;IAAI,CAAC;EAErD,CAAC;AAEL,CAAC,CACF,CAAC;AACF;;AAEA,SAASI,GAAG,GAAG;EACb,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEN;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3C;AAAC,KAFQM,GAAG;AAIZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}