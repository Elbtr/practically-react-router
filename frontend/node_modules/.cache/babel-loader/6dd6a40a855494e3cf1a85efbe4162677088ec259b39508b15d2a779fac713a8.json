{"ast":null,"code":"var _jsxFileName = \"/home/hasael/Desktop/belajar-react js/practically react-router/frontend/src/pages/EventDetail.jsx\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetail() {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"EventDetail page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetail, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetail;\nexport default EventDetail;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch  details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function action(_ref2) {\n  let {\n    request,\n    params\n  } = _ref2;\n  const eventId = params.eventId;\n  console.log(eventId);\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","EventDetail","data","event","loader","request","params","id","eventId","response","fetch","ok","message","status","action","console","log"],"sources":["/home/hasael/Desktop/belajar-react js/practically react-router/frontend/src/pages/EventDetail.jsx"],"sourcesContent":["import { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nfunction EventDetail() {\n  const data = useRouteLoaderData(\"event-detail\");\n  return (\n    <>\n      <h1>EventDetail page</h1>\n      <EventItem event={data.event} />\n    </>\n  );\n}\nexport default EventDetail;\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetch  details for selected event.\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    return response;\n  }\n}\n\nexport function action({ request, params }) {\n  const eventId = params.eventId;\n  console.log(eventId);\n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAAA;AAEhD,SAASC,WAAW,GAAG;EAAA;EACrB,MAAMC,IAAI,GAAGH,kBAAkB,CAAC,cAAc,CAAC;EAC/C,oBACE;IAAA,wBACE;MAAA,UAAI;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAK,eACzB,QAAC,SAAS;MAAC,KAAK,EAAEG,IAAI,CAACC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAC/B;AAEP;AAAC,GARQF,WAAW;EAAA,QACLF,kBAAkB;AAAA;AAAA,KADxBE,WAAW;AASpB,eAAeA,WAAW;AAE1B,OAAO,eAAeG,MAAM,OAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC;EAC9C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMb,IAAI,CACR;MAAEc,OAAO,EAAE;IAA+C,CAAC,EAC3D;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,SAASK,MAAM,QAAsB;EAAA,IAArB;IAAET,OAAO;IAAEC;EAAO,CAAC;EACxC,MAAME,OAAO,GAAGF,MAAM,CAACE,OAAO;EAC9BO,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;AACtB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}