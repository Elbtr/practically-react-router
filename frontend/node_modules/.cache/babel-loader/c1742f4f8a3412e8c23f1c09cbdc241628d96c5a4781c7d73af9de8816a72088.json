{"ast":null,"code":"var _jsxFileName = \"/home/hasael/Desktop/belajar-react js/practically react-router/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// done\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// done\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// done\n// 4. Add properly working links to the MainNavigation\n// done\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// done\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// done\n// 7. Output the ID of the selected event on the EventDetailPage\n// done\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport EditEvent from \"./pages/EditEvent\";\nimport Error from \"./pages/Error\";\nimport EventDetail, { loader as eventDetailLoader, action as deleteEventAction } from \"./pages/EventDetail\";\nimport Events, { loader as eventsLoader } from \"./pages/Events\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport Home from \"./pages/Home\";\nimport NewEvent from \"./pages/NewEvent\";\nimport RootLayout from \"./pages/Root\";\nimport { action as manipulateEventAction } from \"./components/EventForm\";\nimport NewsletterPage, { action as newsletterAction } from \"./pages/Newsletter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: \":eventId\",\n      id: \"event-detail\",\n      loader: eventDetailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 26\n        }, this),\n        action: deleteEventAction\n      }, {\n        path: \"edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 26\n        }, this),\n        action: manipulateEventAction\n      }]\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 22\n      }, this),\n      action: manipulateEventAction\n    }]\n  }, {\n    path: \"newsletter\",\n    element: /*#__PURE__*/_jsxDEV(NewsletterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 18\n    }, this),\n    action: newsletterAction\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","EditEvent","Error","EventDetail","loader","eventDetailLoader","action","deleteEventAction","Events","eventsLoader","EventsRootLayout","Home","NewEvent","RootLayout","manipulateEventAction","NewsletterPage","newsletterAction","router","path","element","errorElement","children","index","id","App"],"sources":["/home/hasael/Desktop/belajar-react js/practically react-router/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// done\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// done\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// done\n// 4. Add properly working links to the MainNavigation\n// done\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// done\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// done\n// 7. Output the ID of the selected event on the EventDetailPage\n// done\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\n\nimport EditEvent from \"./pages/EditEvent\";\nimport Error from \"./pages/Error\";\nimport EventDetail, {\n  loader as eventDetailLoader,\n  action as deleteEventAction,\n} from \"./pages/EventDetail\";\nimport Events, { loader as eventsLoader } from \"./pages/Events\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport Home from \"./pages/Home\";\nimport NewEvent from \"./pages/NewEvent\";\nimport RootLayout from \"./pages/Root\";\nimport { action as manipulateEventAction } from \"./components/EventForm\";\nimport NewsletterPage, { action as newsletterAction } from \"./pages/Newsletter\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    errorElement: <Error />,\n    children: [\n      { index: true, element: <Home /> },\n      {\n        path: \"events\",\n        element: <EventsRootLayout />,\n        children: [\n          {\n            index: true,\n            element: <Events />,\n            loader: eventsLoader,\n          },\n          {\n            path: \":eventId\",\n            id: \"event-detail\",\n            loader: eventDetailLoader,\n            children: [\n              {\n                index: true,\n                element: <EventDetail />,\n                action: deleteEventAction,\n              },\n              {\n                path: \"edit\",\n                element: <EditEvent />,\n                action: manipulateEventAction,\n              },\n            ],\n          },\n          {\n            path: \"new\",\n            element: <NewEvent />,\n            action: manipulateEventAction,\n          },\n        ],\n      },\n      {\n        path: \"newsletter\",\n        element: <NewsletterPage />,\n        action: newsletterAction,\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AAEtE,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,WAAW,IAChBC,MAAM,IAAIC,iBAAiB,EAC3BC,MAAM,IAAIC,iBAAiB,QACtB,qBAAqB;AAC5B,OAAOC,MAAM,IAAIJ,MAAM,IAAIK,YAAY,QAAQ,gBAAgB;AAC/D,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASP,MAAM,IAAIQ,qBAAqB,QAAQ,wBAAwB;AACxE,OAAOC,cAAc,IAAIT,MAAM,IAAIU,gBAAgB,QAAQ,oBAAoB;AAAC;AAEhF,MAAMC,MAAM,GAAGjB,mBAAmB,CAAC,CACjC;EACEkB,IAAI,EAAE,GAAG;EACTC,OAAO,eAAE,QAAC,UAAU;IAAA;IAAA;IAAA;EAAA,QAAG;EACvBC,YAAY,eAAE,QAAC,KAAK;IAAA;IAAA;IAAA;EAAA,QAAG;EACvBC,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEH,OAAO,eAAE,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA;EAAI,CAAC,EAClC;IACED,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAE,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,QAAG;IAC7BE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MACXH,OAAO,eAAE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;MACnBf,MAAM,EAAEK;IACV,CAAC,EACD;MACES,IAAI,EAAE,UAAU;MAChBK,EAAE,EAAE,cAAc;MAClBnB,MAAM,EAAEC,iBAAiB;MACzBgB,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,IAAI;QACXH,OAAO,eAAE,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA,QAAG;QACxBb,MAAM,EAAEC;MACV,CAAC,EACD;QACEW,IAAI,EAAE,MAAM;QACZC,OAAO,eAAE,QAAC,SAAS;UAAA;UAAA;UAAA;QAAA,QAAG;QACtBb,MAAM,EAAEQ;MACV,CAAC;IAEL,CAAC,EACD;MACEI,IAAI,EAAE,KAAK;MACXC,OAAO,eAAE,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;MACrBb,MAAM,EAAEQ;IACV,CAAC;EAEL,CAAC,EACD;IACEI,IAAI,EAAE,YAAY;IAClBC,OAAO,eAAE,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG;IAC3Bb,MAAM,EAAEU;EACV,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASQ,GAAG,GAAG;EACb,oBAAO,QAAC,cAAc;IAAC,MAAM,EAAEP;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAC3C;AAAC,KAFQO,GAAG;AAIZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}